<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fallsvc.mybatis.mapper.UserInfoMapperXML">
    <resultMap id="BaseMap" type="com.fallsvc.mybatis.model.UserInfo">
        <id property="id" column="id"></id>
        <result property="deleteFlag" column="delete_flag"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
    </resultMap>

    <!--    <select id="selectAll" resultType="com.fallsvc.mybatis.model.UserInfo">-->
<!--&lt;!&ndash;            select * from user_info&ndash;&gt;-->
<!--&lt;!&ndash;        起别名&ndash;&gt;-->
<!--        select id,username,password,age,gender,phone,delete_flag as deleteFlag,create_time as createTime,update_time as updateTime from user_info-->

<!--    </select>-->

    <select id="selectAll" resultMap="BaseMap">
        select * from user_info
    </select>
    <!--    <insert id="insertUser">-->
<!--        insert into user_info (username,password,age) VALUES (#{username},#{password},#{age})-->
<!--    </insert>-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into user_info (username,password,age) VALUES (#{userInfo.username},#{userInfo.password},#{userInfo.age})
    </insert>

    <update id="updateUser">
        update user_info set phone=#{phone} where id=#{id}
    </update>
    <delete id="deleteUser">
        delete from user_info where id=#{id}
    </delete>
    <insert id="insertUser2">
        insert into user_info
        <trim suffixOverrides="," prefix="(" suffix=")"> // suffixOverrides除后缀为,  prefix加前缀 suffix加后缀
        <if test="username!=null">
            username,
        </if>
        <if test="password!=null">
            password,
        </if>
        <if test="age!=null">
            age,
        </if>
        <if test="gender!=null">
            gender,
        </if>
        <if test="phone!=null">
            phone
        </if>
        </trim>
        values
        <trim suffixOverrides="," prefix="(" suffix=")">
        <if test="username!=null">
            #{username},
        </if>
        <if test="password!=null">
            #{password},
        </if>
        <if test="age!=null">
            #{age},
        </if>
        <if test="gender!=null">
        #{gender},
        </if>
        <if test="phone!=null">
            #{phone}
        </if>
        </trim>

    </insert>
    <select id="selectUser" resultType="com.fallsvc.mybatis.model.UserInfo">
        select * from user_info
<!--         使查询始终有结果可以使用'<where>'where语句无内容就去除where 有则去前缀或者后缀。也可以使用where 1=1 保证一定有值-->
        <where>
            <if test="phone!=null">
                and phone=#{phone}
            </if>
            <if test="password!=null">
                and password=#{password}
            </if>
        </where>
    </select>
    <update id="updateByConfition">
        update user_info
<!--        <set> 去前后缀-->
        <set>
            <if test="password!=null">
                password=#{password},
            </if>
            <if test="age!=null">
                age=#{age}
            </if>
        </set>
        where id=#{id}
<!--        update user_info-->
<!--        set-->
<!--        <trim suffixOverrides=",">-->
<!--            <if test="password!=null">-->
<!--                password=#{password},-->
<!--            </if>-->
<!--            <if test="age!=null">-->
<!--                age=#{age}-->
<!--            </if>-->
<!--        </trim>-->
<!--        where id=#{id}-->
<!--        这里的where 一定要写 不能使用<where>-->
    </update>
    <delete id="batchDelete">
        delete from user_info where id in
<!--        (1,2,3)-->
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
<!--&lt;!&ndash;        id=1 or id=2 or id=3&ndash;&gt;-->
<!--        <foreach collection="ids" separator="or" item="id">-->
<!--            id=#{id}-->
<!--        </foreach>-->
<!--        ("p1","z1"),("p2","z2")-->
<!--        <foreach collection="ids" separator="," item="userInfo">-->
<!--            (#{userInfo.username},#{userInfo.password})-->
<!--        </foreach>-->
    </delete>

</mapper>